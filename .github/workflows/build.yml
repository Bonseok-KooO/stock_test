name: Build Executables

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry pyinstaller
        poetry install
    
    - name: Build with PyInstaller
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          poetry run pyinstaller --onefile --noupx --name=client main_debug.py
        else
          poetry run pyinstaller --onedir --collect-all fastapi --collect-all uvicorn --collect-all pydantic --collect-all starlette --hidden-import=fastapi --hidden-import=uvicorn --hidden-import=pydantic --hidden-import=starlette main.py
        fi
      shell: bash
    
    - name: Sign macOS app (if on macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # 임시로 ad-hoc 서명 적용 (개발용)
        codesign --force --deep --sign - dist/client || true
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-${{ matrix.os }}
        path: dist/
